<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="trojanLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALEAAAAmCAYAAACLSno+AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADZmlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw
        ZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1w
        TU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjI3NEEyQjMzQTY0QkUxMTE5Qjg5RTMzOUNBRTQy
        MDlDIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjQ2N0UyRUNGNEJCNTExRTE5RUJGQjBBQzc4OTNG
        RTkzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjQ2N0UyRUNFNEJCNTExRTE5RUJGQjBBQzc4OTNG
        RTkzIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUuMSBXaW5kb3dzIj4gPHhtcE1N
        OkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6Mjk0QTJCMzNBNjRCRTExMTlCODlF
        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
</value>
  </data>
</root>